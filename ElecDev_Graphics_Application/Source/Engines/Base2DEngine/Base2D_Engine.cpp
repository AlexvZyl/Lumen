//=============================================================================================================================================//
//  Includes.																																   //
//=============================================================================================================================================//

#include <iostream>
#include "Engines/Base2DEngine/Base2D_Engine.h"
#include "Engines/Core/EngineCore.h"
#include "Misc/ConsoleColor.h"
#include "OpenGL/SceneGL.h"
#include "OpenGL/CameraGL.h"

//=============================================================================================================================================//
//  Costructor & Destructor.																												   //
//=============================================================================================================================================//

// With GLFW window.
Base2DEngine::Base2DEngine(GUIState* guiState, std::string contextName) 
	: EngineCore(guiState, contextName)
{
	// Start.
	std::cout << blue << "[OPENGL] [INFO] : " << white << "Base 2D engine starting...";

	// Create scene.
	m_scene = std::make_unique<Scene>(CameraType::Standard2D, 500, 500);

	// Done.
	std::cout << blue << "\n[OPENGL] [INFO] : " << white << "Base 2D engine done.";

};

//=============================================================================================================================================//
// EOF.																																		   //
//=============================================================================================================================================//