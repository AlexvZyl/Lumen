//==============================================================================================================================================//
//  Includes.																																	//
//==============================================================================================================================================//

#include <iostream>
#include <thread>
#include "LumenWebSocket.h"

//==============================================================================================================================================//
//  Functions.																																	//
//==============================================================================================================================================//

using tcp = boost::asio::ip::tcp;

LumenWebSocket::LumenWebSocket(std::string& ip, int port)
	: m_port(port)
{
	// Create connection and context.
	m_socketAddress = boost::asio::ip::make_address(ip);
	boost::asio::io_context ioContext{ 1 };
	tcp::acceptor acceptor{ ioContext, {m_socketAddress, m_port} };

	while (true)
	{
		tcp::socket socket{ ioContext };
		acceptor.accept(socket);
		std::cout << "Socket Accepted.\n";
	}

}

LumenWebSocket::~LumenWebSocket()
{
	
}

//==============================================================================================================================================//
//  EOF.																																		//
//==============================================================================================================================================//