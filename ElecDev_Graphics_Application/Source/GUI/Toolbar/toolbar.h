#pragma once

//==============================================================================================================================================//
//  Includes.																																	//
//==============================================================================================================================================//

#include "GUI/GuiElementCore/GuiElementCore.h"

//==============================================================================================================================================//
//  Forward declerations.																														//
//==============================================================================================================================================//

class AssetExplorer;

template<class GuiType>
class GuiLayer;

//==============================================================================================================================================//
//  Toolbar.																																	//
//==============================================================================================================================================//

class Toolbar : public GuiElementCore
{

public:

	// Constructor.
    Toolbar(std::string& name, int windowFlags);

	// Rendering.
	virtual void begin() override;
	virtual void onRender() override;
	virtual void end() override;

	//  Data for the lumen logo.
	float m_texWidth = 0;
	float m_texHeight = 0;
	unsigned m_texID = 0;

	glm::vec4 m_colour;

	// Asset explorer.
	GuiLayer<AssetExplorer>* m_assetExplorerLayer = nullptr;
};

//==============================================================================================================================================//
//  EOF.																																		//
//==============================================================================================================================================//