#pragma once

//==============================================================================================================================================//
//  Includes.																																	//
//==============================================================================================================================================//

#include "GUI/GuiElementCore/GuiElementCore.h"

//==============================================================================================================================================//
//  Forward declerations.																														//
//==============================================================================================================================================//

class EngineCore;

//==============================================================================================================================================//
//  Graphics Scene.																																//
//==============================================================================================================================================//

class GraphicsScene : public GuiElementCore
{
public:

	// Constructor.
	GraphicsScene(std::string name, int windowFlags);

	// Rendering functions.
	virtual void renderBody() override;

	// Set the texture ID that is to be rendered.
	void setEngine(EngineCore* engine);

private:

	friend class EngineLayer;

	// Rendering texture data.
	void* m_textureID = nullptr;
	std::string m_textureChildName;

	// The engine that is in this layer.
	EngineCore* m_engine = nullptr;
};

//==============================================================================================================================================//
//  EOF.																																		//
//==============================================================================================================================================//
